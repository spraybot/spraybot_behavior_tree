<?xml version="1.0"?>
<root main_tree_to_execute="MainTree">
    <!-- ////////// -->
    <BehaviorTree ID="MainTree">
        <Decorator ID="LoopUntilSuccessful" name="">
            <SequenceStar name="">
                <Decorator ID="TickRateLimiter" hz="10.0">
                    <SequenceStar name="">
                        <Condition ID="TopicStatus" inital_status="false" topic_name="/exit_status"/>
                        <Action ID="TransitionLifecycleNode" server_timeout="500.0" service_name="/row_detection/change_state" transition_label="deactivate"/>
                        <Action ID="TransitionLifecycleNode" server_timeout="500.0" service_name="/row_exit_detection/change_state" transition_label="deactivate"/>
                        <Delay delay_msec="10000">
                            <SequenceStar>
                                <Action ID="PublishString" string_value="RowTurning" topic_name="/controller_selection"/>
                                <Action ID="PublishString" string_value="RowTurning" topic_name="/planner_selection"/>
                            </SequenceStar>
                        </Delay>
                        <Action ID="PublishGoal" goal_frame="base_link" goal_pose="0.0; -1.5;3.14" publishing_frame="map"/>
                    </SequenceStar>
                </Decorator>
                <Decorator ID="TickRateLimiter" hz="10.0" name="">
                    <SequenceStar>
                        <Condition ID="TopicStatus" inital_status="false" name="" topic_name="/entrance_status"/>
                        <SequenceStar>
                            <Action ID="PublishString" name="" string_value="RowFollowing" topic_name="/planner_selection"/>
                            <Action ID="PublishString" string_value="RowFollowing" topic_name="/controller_selection"/>
                        </SequenceStar>
                        <Action ID="TransitionLifecycleNode" name="" server_timeout="500.0" service_name="/row_detection/change_state" transition_label="activate"/>
                        <Action ID="TransitionLifecycleNode" name="" server_timeout="500.0" service_name="/row_exit_detection/change_state" transition_label="activate"/>
                    </SequenceStar>
                </Decorator>
            </SequenceStar>
        </Decorator>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="BackUp">
            <input_port name="backup_dist">Distance to backup</input_port>
            <input_port name="backup_speed">Speed at which to backup</input_port>
        </Action>
        <Action ID="ClearEntireCostmap">
            <input_port name="service_name">Service name</input_port>
        </Action>
        <Action ID="ComputePathThroughPoses">
            <input_port name="goals">Destinations to plan through</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="ComputePathToPose">
            <input_port name="goal">Destination to plan to</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="ControllerSelector">
            <input_port name="default_controller">Default controller of the controller selector</input_port>
            <output_port name="selected_controller">Name of the selected controller received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive controller selection commands</input_port>
        </Action>
        <Action ID="ConvertLL2Goal">
            <output_port name="goal">Output goal in local coordinates</output_port>
            <input_port name="ll_goal">Input goal in geographic coordinates</input_port>
            <input_port default="fromLL" name="service_name">Service name frobot_localization LL to map coversion service</input_port>
        </Action>
        <Decorator ID="DistanceController">
            <input_port name="distance">Distance</input_port>
        </Decorator>
        <Condition ID="DistanceTraveled">
            <input_port name="distance">Distance to check if passed</input_port>
            <input_port name="global_frame">reference frame to check in</input_port>
            <input_port name="robot_base_frame">Robot frame to check relative to global_frame</input_port>
        </Condition>
        <Action ID="FollowPath">
            <input_port default="FollowPath" name="controller_id"/>
            <input_port default="GoalChecker" name="goal_checker_id">Goal checker</input_port>
            <input_port name="path">Path to follow</input_port>
        </Action>
        <Action ID="GoalCheckerSelector">
            <input_port name="default_goal_checker">Default goal checker of the controller selector</input_port>
            <output_port name="selected_goal_checker">Name of the selected goal checker received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive goal checker selection commands</input_port>
        </Action>
        <Condition ID="GoalReached">
            <input_port name="goal">Destination</input_port>
        </Condition>
        <Condition ID="GoalUpdated"/>
        <Decorator ID="GoalUpdater">
            <input_port name="input_goal">Original goal in</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
        </Decorator>
        <Condition ID="InitialPoseReceived"/>
        <Condition ID="IsBatteryLow">
            <input_port name="battery_topic">Topic for battery info</input_port>
            <input_port name="is_voltage">Bool if check based on voltage or total %</input_port>
            <input_port name="min_battery">Min battery % or voltage before triggering</input_port>
        </Condition>
        <Condition ID="IsStuck"/>
        <Decorator ID="LoopUntilSuccessful"/>
        <Action ID="NavigateThroughPoses">
            <input_port name="goals">Goals</input_port>
        </Action>
        <Action ID="NavigateToPose">
            <input_port name="goal">Goal</input_port>
        </Action>
        <Action ID="NextGoal">
            <output_port name="goal">Destination to plan to</output_port>
            <input_port name="input_goals">Destinations to plan through</input_port>
            <output_port name="output_goals">Destinations to plan through, with current goal removed</output_port>
        </Action>
        <Control ID="PipelineSequence"/>
        <Action ID="PlannerSelector">
            <input_port name="default_planner">Default planner of the planner selector</input_port>
            <output_port name="selected_planner">Name of the selected planner received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive planner selection commands</input_port>
        </Action>
        <Action ID="PublishGoal">
            <input_port default="base_link" name="goal_frame">Frame goal pose is defined in</input_port>
            <input_port default="0.0; 0.0;0.0" name="goal_pose">Goal pose vector (x; y; z)</input_port>
            <input_port default="map" name="publishing_frame">Frame to convert goal into before publishing</input_port>
        </Action>
        <Action ID="PublishString">
            <input_port default="test" name="string_value">String value</input_port>
            <input_port default="/test_string" name="topic_name">String topic name</input_port>
        </Action>
        <Decorator ID="RateController">
            <input_port name="hz">Rate</input_port>
        </Decorator>
        <Control ID="RecoveryNode">
            <input_port name="number_of_retries">Number of retries</input_port>
        </Control>
        <Action ID="ReinitializeGlobalLocalization"/>
        <Action ID="RemovePassedGoals">
            <input_port name="input_goals">Input goals to remove if passed</input_port>
            <output_port name="output_goals">Set of goals after removing any passed</output_port>
            <input_port name="radius">Radius tolerance on a goal to consider it passed</input_port>
        </Action>
        <Control ID="RoundRobin"/>
        <Decorator ID="SingleTrigger"/>
        <Decorator ID="SpeedController">
            <input_port name="filter_duration">Duration (secs) for velocity smoothing filter</input_port>
            <input_port name="max_rate">Maximum rate</input_port>
            <input_port name="max_speed">Maximum speed</input_port>
            <input_port name="min_rate">Minimum rate</input_port>
            <input_port name="min_speed">Minimum speed</input_port>
        </Decorator>
        <Action ID="Spin">
            <input_port name="spin_dist">Spin distance</input_port>
        </Action>
        <Decorator ID="TickRateLimiter">
            <input_port default="10.0" name="hz">Rate</input_port>
        </Decorator>
        <Condition ID="TimeExpired">
            <input_port name="seconds">Time to check if expired</input_port>
        </Condition>
        <Condition ID="TopicStatus">
            <input_port default="false" name="inital_status">Initial status</input_port>
            <input_port default="status" name="topic_name">Status topic name</input_port>
        </Condition>
        <Condition ID="TransformAvailable">
            <input_port name="child">Child frame for transform</input_port>
            <input_port name="parent">Parent frame for transform</input_port>
        </Condition>
        <Action ID="TransitionLifecycleNode">
            <input_port name="server_timeout">Service call timeout (milliseconds)</input_port>
            <input_port name="service_name">Name of the change_state service</input_port>
            <input_port name="transition_label">Transition name: create/configure/activate/deactivate/cleanup&lt;</input_port>
        </Action>
        <Action ID="TruncatePath">
            <input_port name="distance">Distance before goal to truncate</input_port>
            <input_port name="input_path">Path to truncate</input_port>
            <output_port name="output_path">Truncated path to utilize</output_port>
        </Action>
        <Action ID="Wait">
            <input_port name="wait_duration">Wait time</input_port>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>

